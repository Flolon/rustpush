
syntax = "proto3";

package mmcsp;

message AuthorizeGet {
    message GetData {
        bytes sig = 1;
        string token = 2;
    }
    GetData data = 1;
    uint32 f = 2;
}

message AuthorizePut {
    message PutData {
        message Chunk {
            bytes sig = 1;
            uint32 size = 3;
        }
        bytes sig = 1;
        string token = 2;
        repeated Chunk chunks = 3;
    }
    PutData data = 1;
    uint32 f = 3;
}

message ConfirmResponse {
    message Request {
        message Metric {
            string n = 1;
            string v = 2;
        }
        string url = 1;
        uint32 status = 2;
        repeated Metric edgeInfo = 4;
        optional bytes uploadMd5 = 7;
        repeated Metric metrics = 8;
        repeated Metric metrics2 = 9;
        string token = 10;
        uint32 f13 = 13;
    }
    repeated Request inner = 1;
}

message HTTPRequest {
    message Header {
        string name = 1;
        string value = 2;
    }
    message F12 {
        string name = 1;
        string value = 2;
    }
    string domain = 1;
    uint32 port = 2;
    string method = 3;
    string path = 4;
    string protocol = 5;
    string protocolVer = 6;
    string scheme = 7;
    repeated Header headers = 8;
    string datacenter = 9;
    uint64 f11 = 11;
    F12 f12 = 12;
}

message Container {
    message ChunkMeta {
        bytes checksum = 1;
        uint64 size = 3;
        uint64 offset = 4;
    }
    HTTPRequest request = 1;
    repeated ChunkMeta chunks = 2;
    string clAuthP1 = 3;
    string clAuthP2 = 4;
}

message AuthorizeGetResponse {
    message F1 {
        message ChunkReferences {
            message ChunkReference {
                uint32 container_index = 1;
                uint32 chunk_index = 2;
            }
            bytes fileChecksum = 1;
            repeated ChunkReference chunkReferences = 2;
            uint32 f5 = 5;
        }
        repeated Container containers = 1;
        ChunkReferences references = 2;
    }
    F1 f1 = 1;
    uint32 f = 4;
}

message AuthorizePutResponse {
    message UploadTarget {
        string clAuthP1 = 1;
        HTTPRequest request = 2;
        repeated bytes chunks = 3;
        string clAuthP2 = 4;
    }
    message F4 {
        bytes signature = 1;
        uint32 f2 = 2;
    }
    repeated UploadTarget targets = 1;
    uint32 f3 = 3;
    F4 f4 = 4;
}